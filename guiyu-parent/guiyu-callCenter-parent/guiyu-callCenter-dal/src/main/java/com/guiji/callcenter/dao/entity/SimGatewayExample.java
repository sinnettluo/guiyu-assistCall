package com.guiji.callcenter.dao.entity;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

public class SimGatewayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public SimGatewayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigInteger value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigInteger value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigInteger value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigInteger value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigInteger value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigInteger value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigInteger> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigInteger> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigInteger value1, BigInteger value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigInteger value1, BigInteger value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdIsNull() {
            addCriterion("sim_gateway_id is null");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdIsNotNull() {
            addCriterion("sim_gateway_id is not null");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdEqualTo(String value) {
            addCriterion("sim_gateway_id =", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdNotEqualTo(String value) {
            addCriterion("sim_gateway_id <>", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdGreaterThan(String value) {
            addCriterion("sim_gateway_id >", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdGreaterThanOrEqualTo(String value) {
            addCriterion("sim_gateway_id >=", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdLessThan(String value) {
            addCriterion("sim_gateway_id <", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdLessThanOrEqualTo(String value) {
            addCriterion("sim_gateway_id <=", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdLike(String value) {
            addCriterion("sim_gateway_id like", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdNotLike(String value) {
            addCriterion("sim_gateway_id not like", value, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdIn(List<String> values) {
            addCriterion("sim_gateway_id in", values, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdNotIn(List<String> values) {
            addCriterion("sim_gateway_id not in", values, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdBetween(String value1, String value2) {
            addCriterion("sim_gateway_id between", value1, value2, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andSimGatewayIdNotBetween(String value1, String value2) {
            addCriterion("sim_gateway_id not between", value1, value2, "simGatewayId");
            return (Criteria) this;
        }

        public Criteria andStartCountIsNull() {
            addCriterion("start_count is null");
            return (Criteria) this;
        }

        public Criteria andStartCountIsNotNull() {
            addCriterion("start_count is not null");
            return (Criteria) this;
        }

        public Criteria andStartCountEqualTo(Integer value) {
            addCriterion("start_count =", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountNotEqualTo(Integer value) {
            addCriterion("start_count <>", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountGreaterThan(Integer value) {
            addCriterion("start_count >", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("start_count >=", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountLessThan(Integer value) {
            addCriterion("start_count <", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountLessThanOrEqualTo(Integer value) {
            addCriterion("start_count <=", value, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountIn(List<Integer> values) {
            addCriterion("start_count in", values, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountNotIn(List<Integer> values) {
            addCriterion("start_count not in", values, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountBetween(Integer value1, Integer value2) {
            addCriterion("start_count between", value1, value2, "startCount");
            return (Criteria) this;
        }

        public Criteria andStartCountNotBetween(Integer value1, Integer value2) {
            addCriterion("start_count not between", value1, value2, "startCount");
            return (Criteria) this;
        }

        public Criteria andCountsStepIsNull() {
            addCriterion("counts_step is null");
            return (Criteria) this;
        }

        public Criteria andCountsStepIsNotNull() {
            addCriterion("counts_step is not null");
            return (Criteria) this;
        }

        public Criteria andCountsStepEqualTo(Integer value) {
            addCriterion("counts_step =", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepNotEqualTo(Integer value) {
            addCriterion("counts_step <>", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepGreaterThan(Integer value) {
            addCriterion("counts_step >", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepGreaterThanOrEqualTo(Integer value) {
            addCriterion("counts_step >=", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepLessThan(Integer value) {
            addCriterion("counts_step <", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepLessThanOrEqualTo(Integer value) {
            addCriterion("counts_step <=", value, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepIn(List<Integer> values) {
            addCriterion("counts_step in", values, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepNotIn(List<Integer> values) {
            addCriterion("counts_step not in", values, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepBetween(Integer value1, Integer value2) {
            addCriterion("counts_step between", value1, value2, "countsStep");
            return (Criteria) this;
        }

        public Criteria andCountsStepNotBetween(Integer value1, Integer value2) {
            addCriterion("counts_step not between", value1, value2, "countsStep");
            return (Criteria) this;
        }

        public Criteria andStartPwdIsNull() {
            addCriterion("start_pwd is null");
            return (Criteria) this;
        }

        public Criteria andStartPwdIsNotNull() {
            addCriterion("start_pwd is not null");
            return (Criteria) this;
        }

        public Criteria andStartPwdEqualTo(Integer value) {
            addCriterion("start_pwd =", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdNotEqualTo(Integer value) {
            addCriterion("start_pwd <>", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdGreaterThan(Integer value) {
            addCriterion("start_pwd >", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdGreaterThanOrEqualTo(Integer value) {
            addCriterion("start_pwd >=", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdLessThan(Integer value) {
            addCriterion("start_pwd <", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdLessThanOrEqualTo(Integer value) {
            addCriterion("start_pwd <=", value, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdIn(List<Integer> values) {
            addCriterion("start_pwd in", values, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdNotIn(List<Integer> values) {
            addCriterion("start_pwd not in", values, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdBetween(Integer value1, Integer value2) {
            addCriterion("start_pwd between", value1, value2, "startPwd");
            return (Criteria) this;
        }

        public Criteria andStartPwdNotBetween(Integer value1, Integer value2) {
            addCriterion("start_pwd not between", value1, value2, "startPwd");
            return (Criteria) this;
        }

        public Criteria andPwdStepIsNull() {
            addCriterion("pwd_step is null");
            return (Criteria) this;
        }

        public Criteria andPwdStepIsNotNull() {
            addCriterion("pwd_step is not null");
            return (Criteria) this;
        }

        public Criteria andPwdStepEqualTo(Integer value) {
            addCriterion("pwd_step =", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepNotEqualTo(Integer value) {
            addCriterion("pwd_step <>", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepGreaterThan(Integer value) {
            addCriterion("pwd_step >", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepGreaterThanOrEqualTo(Integer value) {
            addCriterion("pwd_step >=", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepLessThan(Integer value) {
            addCriterion("pwd_step <", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepLessThanOrEqualTo(Integer value) {
            addCriterion("pwd_step <=", value, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepIn(List<Integer> values) {
            addCriterion("pwd_step in", values, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepNotIn(List<Integer> values) {
            addCriterion("pwd_step not in", values, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepBetween(Integer value1, Integer value2) {
            addCriterion("pwd_step between", value1, value2, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andPwdStepNotBetween(Integer value1, Integer value2) {
            addCriterion("pwd_step not between", value1, value2, "pwdStep");
            return (Criteria) this;
        }

        public Criteria andCountNumIsNull() {
            addCriterion("count_num is null");
            return (Criteria) this;
        }

        public Criteria andCountNumIsNotNull() {
            addCriterion("count_num is not null");
            return (Criteria) this;
        }

        public Criteria andCountNumEqualTo(Integer value) {
            addCriterion("count_num =", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumNotEqualTo(Integer value) {
            addCriterion("count_num <>", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumGreaterThan(Integer value) {
            addCriterion("count_num >", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("count_num >=", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumLessThan(Integer value) {
            addCriterion("count_num <", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumLessThanOrEqualTo(Integer value) {
            addCriterion("count_num <=", value, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumIn(List<Integer> values) {
            addCriterion("count_num in", values, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumNotIn(List<Integer> values) {
            addCriterion("count_num not in", values, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumBetween(Integer value1, Integer value2) {
            addCriterion("count_num between", value1, value2, "countNum");
            return (Criteria) this;
        }

        public Criteria andCountNumNotBetween(Integer value1, Integer value2) {
            addCriterion("count_num not between", value1, value2, "countNum");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdIsNull() {
            addCriterion("sim_agent_id is null");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdIsNotNull() {
            addCriterion("sim_agent_id is not null");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdEqualTo(String value) {
            addCriterion("sim_agent_id =", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdNotEqualTo(String value) {
            addCriterion("sim_agent_id <>", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdGreaterThan(String value) {
            addCriterion("sim_agent_id >", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdGreaterThanOrEqualTo(String value) {
            addCriterion("sim_agent_id >=", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdLessThan(String value) {
            addCriterion("sim_agent_id <", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdLessThanOrEqualTo(String value) {
            addCriterion("sim_agent_id <=", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdLike(String value) {
            addCriterion("sim_agent_id like", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdNotLike(String value) {
            addCriterion("sim_agent_id not like", value, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdIn(List<String> values) {
            addCriterion("sim_agent_id in", values, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdNotIn(List<String> values) {
            addCriterion("sim_agent_id not in", values, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdBetween(String value1, String value2) {
            addCriterion("sim_agent_id between", value1, value2, "simAgentId");
            return (Criteria) this;
        }

        public Criteria andSimAgentIdNotBetween(String value1, String value2) {
            addCriterion("sim_agent_id not between", value1, value2, "simAgentId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sim_gateway
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sim_gateway
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}