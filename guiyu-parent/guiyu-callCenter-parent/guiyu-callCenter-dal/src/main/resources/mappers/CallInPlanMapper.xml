<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.callcenter.dao.CallInPlanMapper" >
  <resultMap id="BaseResultMap" type="com.guiji.callcenter.dao.entity.CallInPlan" >
    <id column="call_id" property="callId" jdbcType="BIGINT" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="temp_id" property="tempId" jdbcType="VARCHAR" />
    <result column="line_id" property="lineId" jdbcType="INTEGER" />
    <result column="serverId" property="serverid" jdbcType="VARCHAR" />
    <result column="agent_id" property="agentId" jdbcType="VARCHAR" />
    <result column="agent_answer_time" property="agentAnswerTime" jdbcType="TIMESTAMP" />
    <result column="agent_channel_uuid" property="agentChannelUuid" jdbcType="VARCHAR" />
    <result column="agent_group_id" property="agentGroupId" jdbcType="VARCHAR" />
    <result column="agent_start_time" property="agentStartTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="call_start_time" property="callStartTime" jdbcType="TIMESTAMP" />
    <result column="hangup_time" property="hangupTime" jdbcType="TIMESTAMP" />
    <result column="answer_time" property="answerTime" jdbcType="TIMESTAMP" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="bill_sec" property="billSec" jdbcType="INTEGER" />
    <result column="call_direction" property="callDirection" jdbcType="INTEGER" />
    <result column="call_state" property="callState" jdbcType="INTEGER" />
    <result column="hangup_direction" property="hangupDirection" jdbcType="INTEGER" />
    <result column="accurate_intent" property="accurateIntent" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="hangup_code" property="hangupCode" jdbcType="VARCHAR" />
    <result column="originate_cmd" property="originateCmd" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="has_tts" property="hasTts" jdbcType="BIT" />
    <result column="ai_id" property="aiId" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
    <result column="isread" property="isread" jdbcType="INTEGER" />
    <result column="plan_uuid" property="planUuid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    call_id, phone_num, customer_id, temp_id, line_id, serverId, agent_id, agent_answer_time, 
    agent_channel_uuid, agent_group_id, agent_start_time, create_time, call_start_time, 
    hangup_time, answer_time, duration, bill_sec, call_direction, call_state, hangup_direction, 
    accurate_intent, reason, hangup_code, originate_cmd, remarks, has_tts, ai_id, isdel, 
    isread, plan_uuid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guiji.callcenter.dao.entity.CallInPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from call_in_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from call_in_plan
    where call_id = #{callId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from call_in_plan
    where call_id = #{callId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.guiji.callcenter.dao.entity.CallInPlanExample" >
    delete from call_in_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guiji.callcenter.dao.entity.CallInPlan" >
    insert into call_in_plan (call_id, phone_num, customer_id, 
      temp_id, line_id, serverId, 
      agent_id, agent_answer_time, agent_channel_uuid, 
      agent_group_id, agent_start_time, create_time, 
      call_start_time, hangup_time, answer_time, 
      duration, bill_sec, call_direction, 
      call_state, hangup_direction, accurate_intent, 
      reason, hangup_code, originate_cmd, 
      remarks, has_tts, ai_id, 
      isdel, isread, plan_uuid
      )
    values (#{callId,jdbcType=BIGINT}, #{phoneNum,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, 
      #{tempId,jdbcType=VARCHAR}, #{lineId,jdbcType=INTEGER}, #{serverid,jdbcType=VARCHAR}, 
      #{agentId,jdbcType=VARCHAR}, #{agentAnswerTime,jdbcType=TIMESTAMP}, #{agentChannelUuid,jdbcType=VARCHAR}, 
      #{agentGroupId,jdbcType=VARCHAR}, #{agentStartTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{callStartTime,jdbcType=TIMESTAMP}, #{hangupTime,jdbcType=TIMESTAMP}, #{answerTime,jdbcType=TIMESTAMP}, 
      #{duration,jdbcType=INTEGER}, #{billSec,jdbcType=INTEGER}, #{callDirection,jdbcType=INTEGER}, 
      #{callState,jdbcType=INTEGER}, #{hangupDirection,jdbcType=INTEGER}, #{accurateIntent,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{hangupCode,jdbcType=VARCHAR}, #{originateCmd,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{hasTts,jdbcType=BIT}, #{aiId,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=INTEGER}, #{isread,jdbcType=INTEGER}, #{planUuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guiji.callcenter.dao.entity.CallInPlan" >
    insert into call_in_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="callId != null" >
        call_id,
      </if>
      <if test="phoneNum != null" >
        phone_num,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="tempId != null" >
        temp_id,
      </if>
      <if test="lineId != null" >
        line_id,
      </if>
      <if test="serverid != null" >
        serverId,
      </if>
      <if test="agentId != null" >
        agent_id,
      </if>
      <if test="agentAnswerTime != null" >
        agent_answer_time,
      </if>
      <if test="agentChannelUuid != null" >
        agent_channel_uuid,
      </if>
      <if test="agentGroupId != null" >
        agent_group_id,
      </if>
      <if test="agentStartTime != null" >
        agent_start_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="callStartTime != null" >
        call_start_time,
      </if>
      <if test="hangupTime != null" >
        hangup_time,
      </if>
      <if test="answerTime != null" >
        answer_time,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="billSec != null" >
        bill_sec,
      </if>
      <if test="callDirection != null" >
        call_direction,
      </if>
      <if test="callState != null" >
        call_state,
      </if>
      <if test="hangupDirection != null" >
        hangup_direction,
      </if>
      <if test="accurateIntent != null" >
        accurate_intent,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="hangupCode != null" >
        hangup_code,
      </if>
      <if test="originateCmd != null" >
        originate_cmd,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="hasTts != null" >
        has_tts,
      </if>
      <if test="aiId != null" >
        ai_id,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="isread != null" >
        isread,
      </if>
      <if test="planUuid != null" >
        plan_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="callId != null" >
        #{callId,jdbcType=BIGINT},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="tempId != null" >
        #{tempId,jdbcType=VARCHAR},
      </if>
      <if test="lineId != null" >
        #{lineId,jdbcType=INTEGER},
      </if>
      <if test="serverid != null" >
        #{serverid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentAnswerTime != null" >
        #{agentAnswerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentChannelUuid != null" >
        #{agentChannelUuid,jdbcType=VARCHAR},
      </if>
      <if test="agentGroupId != null" >
        #{agentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="agentStartTime != null" >
        #{agentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callStartTime != null" >
        #{callStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hangupTime != null" >
        #{hangupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerTime != null" >
        #{answerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="billSec != null" >
        #{billSec,jdbcType=INTEGER},
      </if>
      <if test="callDirection != null" >
        #{callDirection,jdbcType=INTEGER},
      </if>
      <if test="callState != null" >
        #{callState,jdbcType=INTEGER},
      </if>
      <if test="hangupDirection != null" >
        #{hangupDirection,jdbcType=INTEGER},
      </if>
      <if test="accurateIntent != null" >
        #{accurateIntent,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="hangupCode != null" >
        #{hangupCode,jdbcType=VARCHAR},
      </if>
      <if test="originateCmd != null" >
        #{originateCmd,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="hasTts != null" >
        #{hasTts,jdbcType=BIT},
      </if>
      <if test="aiId != null" >
        #{aiId,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=INTEGER},
      </if>
      <if test="planUuid != null" >
        #{planUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guiji.callcenter.dao.entity.CallInPlanExample" resultType="java.lang.Integer" >
    select count(*) from call_in_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update call_in_plan
    <set >
      <if test="record.callId != null" >
        call_id = #{record.callId,jdbcType=BIGINT},
      </if>
      <if test="record.phoneNum != null" >
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.tempId != null" >
        temp_id = #{record.tempId,jdbcType=VARCHAR},
      </if>
      <if test="record.lineId != null" >
        line_id = #{record.lineId,jdbcType=INTEGER},
      </if>
      <if test="record.serverid != null" >
        serverId = #{record.serverid,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null" >
        agent_id = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentAnswerTime != null" >
        agent_answer_time = #{record.agentAnswerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.agentChannelUuid != null" >
        agent_channel_uuid = #{record.agentChannelUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.agentGroupId != null" >
        agent_group_id = #{record.agentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentStartTime != null" >
        agent_start_time = #{record.agentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.callStartTime != null" >
        call_start_time = #{record.callStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hangupTime != null" >
        hangup_time = #{record.hangupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.answerTime != null" >
        answer_time = #{record.answerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.billSec != null" >
        bill_sec = #{record.billSec,jdbcType=INTEGER},
      </if>
      <if test="record.callDirection != null" >
        call_direction = #{record.callDirection,jdbcType=INTEGER},
      </if>
      <if test="record.callState != null" >
        call_state = #{record.callState,jdbcType=INTEGER},
      </if>
      <if test="record.hangupDirection != null" >
        hangup_direction = #{record.hangupDirection,jdbcType=INTEGER},
      </if>
      <if test="record.accurateIntent != null" >
        accurate_intent = #{record.accurateIntent,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.hangupCode != null" >
        hangup_code = #{record.hangupCode,jdbcType=VARCHAR},
      </if>
      <if test="record.originateCmd != null" >
        originate_cmd = #{record.originateCmd,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.hasTts != null" >
        has_tts = #{record.hasTts,jdbcType=BIT},
      </if>
      <if test="record.aiId != null" >
        ai_id = #{record.aiId,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.isread != null" >
        isread = #{record.isread,jdbcType=INTEGER},
      </if>
      <if test="record.planUuid != null" >
        plan_uuid = #{record.planUuid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update call_in_plan
    set call_id = #{record.callId,jdbcType=BIGINT},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      temp_id = #{record.tempId,jdbcType=VARCHAR},
      line_id = #{record.lineId,jdbcType=INTEGER},
      serverId = #{record.serverid,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=VARCHAR},
      agent_answer_time = #{record.agentAnswerTime,jdbcType=TIMESTAMP},
      agent_channel_uuid = #{record.agentChannelUuid,jdbcType=VARCHAR},
      agent_group_id = #{record.agentGroupId,jdbcType=VARCHAR},
      agent_start_time = #{record.agentStartTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      call_start_time = #{record.callStartTime,jdbcType=TIMESTAMP},
      hangup_time = #{record.hangupTime,jdbcType=TIMESTAMP},
      answer_time = #{record.answerTime,jdbcType=TIMESTAMP},
      duration = #{record.duration,jdbcType=INTEGER},
      bill_sec = #{record.billSec,jdbcType=INTEGER},
      call_direction = #{record.callDirection,jdbcType=INTEGER},
      call_state = #{record.callState,jdbcType=INTEGER},
      hangup_direction = #{record.hangupDirection,jdbcType=INTEGER},
      accurate_intent = #{record.accurateIntent,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      hangup_code = #{record.hangupCode,jdbcType=VARCHAR},
      originate_cmd = #{record.originateCmd,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      has_tts = #{record.hasTts,jdbcType=BIT},
      ai_id = #{record.aiId,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=INTEGER},
      isread = #{record.isread,jdbcType=INTEGER},
      plan_uuid = #{record.planUuid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guiji.callcenter.dao.entity.CallInPlan" >
    update call_in_plan
    <set >
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="tempId != null" >
        temp_id = #{tempId,jdbcType=VARCHAR},
      </if>
      <if test="lineId != null" >
        line_id = #{lineId,jdbcType=INTEGER},
      </if>
      <if test="serverid != null" >
        serverId = #{serverid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        agent_id = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentAnswerTime != null" >
        agent_answer_time = #{agentAnswerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentChannelUuid != null" >
        agent_channel_uuid = #{agentChannelUuid,jdbcType=VARCHAR},
      </if>
      <if test="agentGroupId != null" >
        agent_group_id = #{agentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="agentStartTime != null" >
        agent_start_time = #{agentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callStartTime != null" >
        call_start_time = #{callStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hangupTime != null" >
        hangup_time = #{hangupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerTime != null" >
        answer_time = #{answerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="billSec != null" >
        bill_sec = #{billSec,jdbcType=INTEGER},
      </if>
      <if test="callDirection != null" >
        call_direction = #{callDirection,jdbcType=INTEGER},
      </if>
      <if test="callState != null" >
        call_state = #{callState,jdbcType=INTEGER},
      </if>
      <if test="hangupDirection != null" >
        hangup_direction = #{hangupDirection,jdbcType=INTEGER},
      </if>
      <if test="accurateIntent != null" >
        accurate_intent = #{accurateIntent,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="hangupCode != null" >
        hangup_code = #{hangupCode,jdbcType=VARCHAR},
      </if>
      <if test="originateCmd != null" >
        originate_cmd = #{originateCmd,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="hasTts != null" >
        has_tts = #{hasTts,jdbcType=BIT},
      </if>
      <if test="aiId != null" >
        ai_id = #{aiId,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        isread = #{isread,jdbcType=INTEGER},
      </if>
      <if test="planUuid != null" >
        plan_uuid = #{planUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where call_id = #{callId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guiji.callcenter.dao.entity.CallInPlan" >
    update call_in_plan
    set phone_num = #{phoneNum,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      temp_id = #{tempId,jdbcType=VARCHAR},
      line_id = #{lineId,jdbcType=INTEGER},
      serverId = #{serverid,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=VARCHAR},
      agent_answer_time = #{agentAnswerTime,jdbcType=TIMESTAMP},
      agent_channel_uuid = #{agentChannelUuid,jdbcType=VARCHAR},
      agent_group_id = #{agentGroupId,jdbcType=VARCHAR},
      agent_start_time = #{agentStartTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      call_start_time = #{callStartTime,jdbcType=TIMESTAMP},
      hangup_time = #{hangupTime,jdbcType=TIMESTAMP},
      answer_time = #{answerTime,jdbcType=TIMESTAMP},
      duration = #{duration,jdbcType=INTEGER},
      bill_sec = #{billSec,jdbcType=INTEGER},
      call_direction = #{callDirection,jdbcType=INTEGER},
      call_state = #{callState,jdbcType=INTEGER},
      hangup_direction = #{hangupDirection,jdbcType=INTEGER},
      accurate_intent = #{accurateIntent,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      hangup_code = #{hangupCode,jdbcType=VARCHAR},
      originate_cmd = #{originateCmd,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      has_tts = #{hasTts,jdbcType=BIT},
      ai_id = #{aiId,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=INTEGER},
      isread = #{isread,jdbcType=INTEGER},
      plan_uuid = #{planUuid,jdbcType=VARCHAR}
    where call_id = #{callId,jdbcType=BIGINT}
  </update>
</mapper>