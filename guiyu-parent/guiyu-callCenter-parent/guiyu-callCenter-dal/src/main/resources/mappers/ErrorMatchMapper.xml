<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.callcenter.dao.ErrorMatchMapper" >
  <resultMap id="BaseResultMap" type="com.guiji.callcenter.dao.entity.ErrorMatch" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="error_type" property="errorType" jdbcType="INTEGER" />
    <result column="error_name" property="errorName" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="key_word" property="keyWord" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, error_type, error_name, en_name, key_word
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guiji.callcenter.dao.entity.ErrorMatchExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from error_match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from error_match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from error_match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guiji.callcenter.dao.entity.ErrorMatchExample" >
    delete from error_match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guiji.callcenter.dao.entity.ErrorMatch" >
    insert into error_match (id, error_type, error_name, 
      en_name, key_word)
    values (#{id,jdbcType=INTEGER}, #{errorType,jdbcType=INTEGER}, #{errorName,jdbcType=VARCHAR}, 
      #{enName,jdbcType=VARCHAR}, #{keyWord,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.guiji.callcenter.dao.entity.ErrorMatch" >
    insert into error_match
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="errorType != null" >
        error_type,
      </if>
      <if test="errorName != null" >
        error_name,
      </if>
      <if test="enName != null" >
        en_name,
      </if>
      <if test="keyWord != null" >
        key_word,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="errorType != null" >
        #{errorType,jdbcType=INTEGER},
      </if>
      <if test="errorName != null" >
        #{errorName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="keyWord != null" >
        #{keyWord,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guiji.callcenter.dao.entity.ErrorMatchExample" resultType="java.lang.Integer" >
    select count(*) from error_match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update error_match
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.errorType != null" >
        error_type = #{record.errorType,jdbcType=INTEGER},
      </if>
      <if test="record.errorName != null" >
        error_name = #{record.errorName,jdbcType=VARCHAR},
      </if>
      <if test="record.enName != null" >
        en_name = #{record.enName,jdbcType=VARCHAR},
      </if>
      <if test="record.keyWord != null" >
        key_word = #{record.keyWord,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update error_match
    set id = #{record.id,jdbcType=INTEGER},
      error_type = #{record.errorType,jdbcType=INTEGER},
      error_name = #{record.errorName,jdbcType=VARCHAR},
      en_name = #{record.enName,jdbcType=VARCHAR},
      key_word = #{record.keyWord,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guiji.callcenter.dao.entity.ErrorMatch" >
    update error_match
    <set >
      <if test="errorType != null" >
        error_type = #{errorType,jdbcType=INTEGER},
      </if>
      <if test="errorName != null" >
        error_name = #{errorName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="keyWord != null" >
        key_word = #{keyWord,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guiji.callcenter.dao.entity.ErrorMatch" >
    update error_match
    set error_type = #{errorType,jdbcType=INTEGER},
      error_name = #{errorName,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      key_word = #{keyWord,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectDistinctErrorName" resultType="java.lang.String">
    SELECT   error_name
    FROM error_match   WHERE error_name != '已接通'
    GROUP BY error_name ORDER BY error_name
  </select>
</mapper>