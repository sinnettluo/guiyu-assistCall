<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.dispatch.dao.DispatchPlanMapper">
    <resultMap id="BaseResultMap" type="com.guiji.dispatch.dao.entity.DispatchPlan">
        <result column="plan_uuid" property="planUuid" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="batch_id" property="batchId" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="attach" property="attach" jdbcType="VARCHAR"/>
        <result column="params" property="params" jdbcType="VARCHAR"/>
        <result column="status_plan" property="statusPlan" jdbcType="INTEGER"/>
        <result column="status_sync" property="statusSync" jdbcType="INTEGER"/>
        <result column="recall" property="recall" jdbcType="INTEGER"/>
        <result column="recall_params" property="recallParams" jdbcType="VARCHAR"/>
        <result column="robot" property="robot" jdbcType="VARCHAR"/>
        <result column="line" property="line" jdbcType="INTEGER"/>
        <result column="result" property="result" jdbcType="VARCHAR"/>
        <result column="call_agent" property="callAgent" jdbcType="VARCHAR"/>
        <result column="clean" property="clean" jdbcType="INTEGER"/>
        <result column="call_data" property="callData" jdbcType="INTEGER"/>
        <result column="call_hour" property="callHour" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_tts" property="isTts" jdbcType="INTEGER"/>
        <result column="username" property="userName" jdbcType="VARCHAR"/>
        <result column="replay_type" property="replayType" jdbcType="INTEGER"/>
        <result column="is_del" property="isDel" jdbcType="INTEGER"/>
        <result column="line_name" property="lineName" jdbcType="VARCHAR"/>
        <result column="robot_name" property="robotName" jdbcType="VARCHAR"/>
        <result column="batch_name" property="batchName" jdbcType="VARCHAR"/>
        <result column="flag" property="flag" jdbcType="VARCHAR"/>
        <result column="org_code" property="orgCode" jdbcType="VARCHAR"/>
        <result column="org_id" property="orgId" jdbcType="INTEGER"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="city_code" property="cityCode" jdbcType="VARCHAR"/>
        <result column="line_type" property="lineType" jdbcType="INTEGER"/>

        <result column="line_id" property="lineId" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="cust_name" property="custName" jdbcType="VARCHAR"/>
        <result column="cust_company" property="custCompany" jdbcType="VARCHAR"/>
        <result column="seat_id" property="seatId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    plan_uuid, user_id, batch_id, phone, attach, params, status_plan, status_sync,
    recall, recall_params, robot, line, `result`, call_agent, clean, call_data, call_hour,
    gmt_create, gmt_modified, is_tts, username, replay_type, is_del, line_name, robot_name,
    batch_name, flag, org_code,org_id,  city_name, city_code, line_type,
    line_id, remark, cust_name, cust_company, seat_id
  </sql>
    <select id="selectByExample" resultType="com.guiji.dispatch.dao.entity.DispatchPlan"
            parameterType="com.guiji.dispatch.dao.entity.DispatchPlanExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from dispatch_plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultType="com.guiji.dispatch.dao.entity.DispatchPlan"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from dispatch_plan
        where plan_uuid = #{planUuid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dispatch_plan
    where plan_uuid = #{planUuid,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.guiji.dispatch.dao.entity.DispatchPlanExample">
        delete from dispatch_plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.guiji.dispatch.dao.entity.DispatchPlan">
    insert into dispatch_plan (plan_uuid, user_id,
      batch_id, phone, attach,
      params, status_plan, status_sync,
      recall, recall_params, robot,
      line, `result`, call_agent,
      clean, call_data, call_hour,
      gmt_create, gmt_modified, is_tts,
      username, replay_type, is_del,
      line_name, robot_name, batch_name,
      flag, org_code,org_id, city_name,
      city_code, line_type,
      cust_name, cust_company, seat_id)
    values ( #{planUuid,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER},
      #{batchId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{attach,jdbcType=VARCHAR},
      #{params,jdbcType=VARCHAR}, #{statusPlan,jdbcType=INTEGER}, #{statusSync,jdbcType=INTEGER},
      #{recall,jdbcType=INTEGER}, #{recallParams,jdbcType=VARCHAR}, #{robot,jdbcType=VARCHAR},
      #{line,jdbcType=INTEGER}, #{result,jdbcType=VARCHAR}, #{callAgent,jdbcType=VARCHAR},
      #{clean,jdbcType=INTEGER}, #{callData,jdbcType=INTEGER}, #{callHour,jdbcType=VARCHAR},
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{isTts,jdbcType=INTEGER},
      #{userName,jdbcType=VARCHAR}, #{replayType,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER},
      #{lineName,jdbcType=VARCHAR}, #{robotName,jdbcType=VARCHAR}, #{batchName,jdbcType=VARCHAR},
      #{flag,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},#{orgId,jdbcType=INTEGER}, #{cityName,jdbcType=VARCHAR},
      #{cityCode,jdbcType=VARCHAR}, #{lineType},
      #{custName}, #{custCompany}, #{seatId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.guiji.dispatch.dao.entity.DispatchPlan">
        insert into dispatch_plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planUuid != null">
                plan_uuid,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="batchId != null">
                batch_id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="attach != null">
                attach,
            </if>
            <if test="params != null">
                params,
            </if>
            <if test="statusPlan != null">
                status_plan,
            </if>
            <if test="statusSync != null">
                status_sync,
            </if>
            <if test="recall != null">
                recall,
            </if>
            <if test="recallParams != null">
                recall_params,
            </if>
            <if test="robot != null">
                robot,
            </if>
            <if test="line != null">
                line,
            </if>
            <if test="result != null">
                `result`,
            </if>
            <if test="callAgent != null">
                call_agent,
            </if>
            <if test="clean != null">
                clean,
            </if>
            <if test="callData != null">
                call_data,
            </if>
            <if test="callHour != null">
                call_hour,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="isTts != null">
                is_tts,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="replayType != null">
                replay_type,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="lineName != null">
                line_name,
            </if>
            <if test="robotName != null">
                robot_name,
            </if>
            <if test="batchName != null">
                batch_name,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="orgId != null">
                org_id,
            </if>
            <if test="cityName != null">
                city_name,
            </if>
            <if test="cityCode != null">
                city_code,
            </if>
            <if test="lineType != null">
                line_type,
            </if>
            <if test="custName != null">
                cust_name,
            </if>
            <if test="custCompany != null">
                cust_company,
            </if>
            <if test="seatId != null">
                seat_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planUuid != null">
                #{planUuid,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="batchId != null">
                #{batchId,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="attach != null">
                #{attach,jdbcType=VARCHAR},
            </if>
            <if test="params != null">
                #{params,jdbcType=VARCHAR},
            </if>
            <if test="statusPlan != null">
                #{statusPlan,jdbcType=INTEGER},
            </if>
            <if test="statusSync != null">
                #{statusSync,jdbcType=INTEGER},
            </if>
            <if test="recall != null">
                #{recall,jdbcType=INTEGER},
            </if>
            <if test="recallParams != null">
                #{recallParams,jdbcType=VARCHAR},
            </if>
            <if test="robot != null">
                #{robot,jdbcType=VARCHAR},
            </if>
            <if test="line != null">
                #{line,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
            <if test="callAgent != null">
                #{callAgent,jdbcType=VARCHAR},
            </if>
            <if test="clean != null">
                #{clean,jdbcType=INTEGER},
            </if>
            <if test="callData != null">
                #{callData,jdbcType=INTEGER},
            </if>
            <if test="callHour != null">
                #{callHour,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isTts != null">
                #{isTts,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="replayType != null">
                #{replayType,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
            <if test="lineName != null">
                #{lineName,jdbcType=VARCHAR},
            </if>
            <if test="robotName != null">
                #{robotName,jdbcType=VARCHAR},
            </if>
            <if test="batchName != null">
                #{batchName,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null">
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="cityName != null">
                #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="cityCode != null">
                #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="lineType != null">
                #{lineType},
            </if>
            <if test="custName != null">
                #{custName},
            </if>
            <if test="custCompany != null">
                #{custCompany},
            </if>
            <if test="seatId != null">
                #{seatId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.guiji.dispatch.dao.entity.DispatchPlanExample"
            resultType="java.lang.Integer">
        select count(*) from dispatch_plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update dispatch_plan
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.batchId != null">
                batch_id = #{record.batchId,jdbcType=INTEGER},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.attach != null">
                attach = #{record.attach,jdbcType=VARCHAR},
            </if>
            <if test="record.params != null">
                params = #{record.params,jdbcType=VARCHAR},
            </if>
            <if test="record.statusPlan != null">
                status_plan = #{record.statusPlan,jdbcType=INTEGER},
            </if>
            <if test="record.statusSync != null">
                status_sync = #{record.statusSync,jdbcType=INTEGER},
            </if>
            <if test="record.recall != null">
                recall = #{record.recall,jdbcType=INTEGER},
            </if>
            <if test="record.recallParams != null">
                recall_params = #{record.recallParams,jdbcType=VARCHAR},
            </if>
            <if test="record.robot != null">
                robot = #{record.robot,jdbcType=VARCHAR},
            </if>
            <if test="record.line != null">
                line = #{record.line,jdbcType=INTEGER},
            </if>
            <if test="record.result != null">
                `result` = #{record.result,jdbcType=VARCHAR},
            </if>
            <if test="record.callAgent != null">
                call_agent = #{record.callAgent,jdbcType=VARCHAR},
            </if>
            <if test="record.clean != null">
                clean = #{record.clean,jdbcType=INTEGER},
            </if>
            <if test="record.callData != null">
                call_data = #{record.callData,jdbcType=INTEGER},
            </if>
            <if test="record.callHour != null">
                call_hour = #{record.callHour,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isTts != null">
                is_tts = #{record.isTts,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.replayType != null">
                replay_type = #{record.replayType,jdbcType=INTEGER},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=INTEGER},
            </if>
            <if test="record.lineName != null">
                line_name = #{record.lineName,jdbcType=VARCHAR},
            </if>
            <if test="record.robotName != null">
                robot_name = #{record.robotName,jdbcType=VARCHAR},
            </if>
            <if test="record.batchName != null">
                batch_name = #{record.batchName,jdbcType=VARCHAR},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=VARCHAR},
            </if>
            <if test="record.orgCode != null">
                org_code = #{record.orgCode,jdbcType=VARCHAR},
            </if>
            <if test="record.orgId != null">
                org_id = #{record.orgId,jdbcType=INTEGER},
            </if>
            <if test="record.cityName != null">
                city_name = #{record.cityName,jdbcType=VARCHAR},
            </if>
            <if test="record.cityCode != null">
                city_code = #{record.cityCode,jdbcType=VARCHAR},
            </if>
            <if test="record.lineType != null">
                line_type = #{record.lineType},
            </if>
            <if test="record.custName != null">
                cust_name = #{record.custName},
            </if>
            <if test="record.custCompany != null">
                cust_company = #{record.custCompany},
            </if>
            <if test="record.lineId != null">
                line_id = #{record.lineId},
            </if>
            <if test="record.userId != null">
                seat_id = #{record.seatId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update dispatch_plan
        set user_id = #{record.userId,jdbcType=INTEGER},
        batch_id = #{record.batchId,jdbcType=INTEGER},
        phone = #{record.phone,jdbcType=VARCHAR},
        attach = #{record.attach,jdbcType=VARCHAR},
        params = #{record.params,jdbcType=VARCHAR},
        status_plan = #{record.statusPlan,jdbcType=INTEGER},
        status_sync = #{record.statusSync,jdbcType=INTEGER},
        recall = #{record.recall,jdbcType=INTEGER},
        recall_params = #{record.recallParams,jdbcType=VARCHAR},
        robot = #{record.robot,jdbcType=VARCHAR},
        line = #{record.line,jdbcType=INTEGER},
        `result` = #{record.result,jdbcType=VARCHAR},
        call_agent = #{record.callAgent,jdbcType=VARCHAR},
        clean = #{record.clean,jdbcType=INTEGER},
        call_data = #{record.callData,jdbcType=INTEGER},
        call_hour = #{record.callHour,jdbcType=VARCHAR},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        is_tts = #{record.isTts,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        replay_type = #{record.replayType,jdbcType=INTEGER},
        is_del = #{record.isDel,jdbcType=INTEGER},
        line_name = #{record.lineName,jdbcType=VARCHAR},
        robot_name = #{record.robotName,jdbcType=VARCHAR},
        batch_name = #{record.batchName,jdbcType=VARCHAR},
        flag = #{record.flag,jdbcType=VARCHAR},
        org_code = #{record.orgCode,jdbcType=VARCHAR},
        city_name = #{record.cityName,jdbcType=VARCHAR},
        city_code = #{record.cityCode,jdbcType=VARCHAR},
        line_type = #{lineType},
        cust_name = #{custName},
        cust_company = #{custCompany},
        seat_id = #{record.seatId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.guiji.dispatch.dao.entity.DispatchPlan">
        update dispatch_plan
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="batchId != null">
                batch_id = #{batchId,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="attach != null">
                attach = #{attach,jdbcType=VARCHAR},
            </if>
            <if test="params != null">
                params = #{params,jdbcType=VARCHAR},
            </if>
            <if test="statusPlan != null">
                status_plan = #{statusPlan,jdbcType=INTEGER},
            </if>
            <if test="statusSync != null">
                status_sync = #{statusSync,jdbcType=INTEGER},
            </if>
            <if test="recall != null">
                recall = #{recall,jdbcType=INTEGER},
            </if>
            <if test="recallParams != null">
                recall_params = #{recallParams,jdbcType=VARCHAR},
            </if>
            <if test="robot != null">
                robot = #{robot,jdbcType=VARCHAR},
            </if>
            <if test="line != null">
                line = #{line,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                `result` = #{result,jdbcType=VARCHAR},
            </if>
            <if test="callAgent != null">
                call_agent = #{callAgent,jdbcType=VARCHAR},
            </if>
            <if test="clean != null">
                clean = #{clean,jdbcType=INTEGER},
            </if>
            <if test="callData != null">
                call_data = #{callData,jdbcType=INTEGER},
            </if>
            <if test="callHour != null">
                call_hour = #{callHour,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isTts != null">
                is_tts = #{isTts,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="replayType != null">
                replay_type = #{replayType,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
            <if test="lineName != null">
                line_name = #{lineName,jdbcType=VARCHAR},
            </if>
            <if test="robotName != null">
                robot_name = #{robotName,jdbcType=VARCHAR},
            </if>
            <if test="batchName != null">
                batch_name = #{batchName,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="cityName != null">
                city_name = #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="cityCode != null">
                city_code = #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="lineType != null">
                line_type = #{lineType},
            </if>
            <if test="custName != null">
                cust_name = #{custName},
            </if>
            <if test="custCompany != null">
                cust_company = #{custCompany},
            </if>
            <if test="seatId != null">
                seat_id = #{seatId,jdbcType=INTEGER},
            </if>
        </set>
        where plan_uuid = #{planUuid,jdbcType=BIGINT} and org_id=#{orgId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.guiji.dispatch.dao.entity.DispatchPlan">
    update dispatch_plan
    set
      user_id = #{userId,jdbcType=INTEGER},
      batch_id = #{batchId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      attach = #{attach,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      status_plan = #{statusPlan,jdbcType=INTEGER},
      status_sync = #{statusSync,jdbcType=INTEGER},
      recall = #{recall,jdbcType=INTEGER},
      recall_params = #{recallParams,jdbcType=VARCHAR},
      robot = #{robot,jdbcType=VARCHAR},
      line = #{line,jdbcType=INTEGER},
      `result` = #{result,jdbcType=VARCHAR},
      call_agent = #{callAgent,jdbcType=VARCHAR},
      clean = #{clean,jdbcType=INTEGER},
      call_data = #{callData,jdbcType=INTEGER},
      call_hour = #{callHour,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_tts = #{isTts,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      replay_type = #{replayType,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      line_name = #{lineName,jdbcType=VARCHAR},
      robot_name = #{robotName,jdbcType=VARCHAR},
      batch_name = #{batchName,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      line_type = #{lineType},
      cust_name = #{custName},
      cust_company = #{custCompany},
      seat_id = #{seatId,jdbcType=INTEGER}
    where plan_uuid = #{planUuid,jdbcType=BIGINT}  and org_id=#{orgId,jdbcType=BIGINT}
  </update>


    <update id="finishPlanById">
        update dispatch_plan
        <set>
            status_plan = #{statusPlan},
            result = #{result},
            gmt_modified = #{callbackTime}
        </set>
        WHERE plan_uuid = #{planUuid}
        AND org_id=#{orgId}
    </update>

    <select id="selectByCallHour" resultType="com.guiji.dispatch.dao.entity.DispatchPlan">
        select
        <include refid="Base_Column_List"/>
        from dispatch_plan
        <if test="record.callHour != null">
            where find_in_set(#{record.callHour},call_hour)
        </if>
        <if test="record.userId != null">
            and user_id = #{record.userId}
        </if>
        <if test="record.robot != null">
            and robot = #{record.robot}
        </if>
        <if test="record.callData != null">
            and call_data = #{record.callData}
        </if>
        <if test="record.isDel != null">
            and is_del = #{record.isDel}
        </if>
        <if test="record.statusPlan != null">
            and status_plan = #{record.statusPlan}
        </if>
        <if test="record.statusSync != null">
            and status_sync = #{record.statusSync}
        </if>
        <if test="record.line != null">
            and line = #{record.line}
        </if>
        <if test="record.flag != null">
            and flag = #{record.flag}
        </if>
        <if test="orgId != null">
            and org_id = #{orgId}
        </if>
        <!--<if test="orgIds != null">
          and org_id in
          <foreach item="item" index="index" collection="orgIds" open="("
                   separator="," close=")">
            #{item}
          </foreach>
        </if>-->
        order by `plan_uuid` ASC
        <if test="record.limitStart != null and record.limitStart>=0">
            limit #{record.limitStart} , #{record.limitEnd}
        </if>
    </select>

    <select id="selectByCallHour4UserId" resultType="java.lang.Integer">
        select
        user_id
        from dispatch_plan
        <if test="record.callHour != null">
            where find_in_set(#{record.callHour},call_hour)
        </if>
        <if test="record.userId != null">
            and user_id = #{record.userId}
        </if>
        <if test="record.callData != null">
            and call_data = #{record.callData}
        </if>
        <if test="record.isDel != null">
            and is_del = #{record.isDel}
        </if>
        <if test="record.statusPlan != null">
            and status_plan = #{record.statusPlan}
        </if>
        <if test="record.statusSync != null">
            and status_sync = #{record.statusSync}
        </if>
        <if test="record.line != null">
            and line = #{record.line}
        </if>
        <if test="record.flag != null">
            and flag = #{record.flag}
        </if>
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by user_id
    </select>


    <select id="selectFutureUserByParam" resultType="java.lang.Integer">
        SELECT
        user_id
        FROM dispatch_plan
        WHERE 1 = 1
        <if test="record.userId != null">
            and user_id = #{record.userId}
        </if>
        <if test="record.callData != null">
            and call_data <![CDATA[ >= ]]> #{record.callData}
        </if>
        <if test="record.isDel != null">
            and is_del = #{record.isDel}
        </if>
        <if test="record.statusPlan != null">
            and status_plan = #{record.statusPlan}
        </if>
        <if test="record.statusSync != null">
            and status_sync = #{record.statusSync}
        </if>
        <if test="record.line != null">
            and line = #{record.line}
        </if>
        <if test="record.flag != null">
            and flag = #{record.flag}
        </if>
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY user_id
    </select>


    <select id="selectFuturePlanByUserId" resultType="com.guiji.dispatch.dao.entity.DispatchPlan">
        SELECT
        <include refid="Base_Column_List"/>
        FROM dispatch_plan
        WHERE 1 = 1
        <if test="record.userId != null">
            and user_id = #{record.userId}
        </if>
        <if test="record.robot != null">
            and robot = #{record.robot}
        </if>
        <if test="record.callData != null">
            and call_data <![CDATA[ >= ]]> #{record.callData}
        </if>
        <if test="record.isDel != null">
            and is_del = #{record.isDel}
        </if>
        <if test="record.statusPlan != null">
            and status_plan = #{record.statusPlan}
        </if>
        <if test="record.statusSync != null">
            and status_sync = #{record.statusSync}
        </if>
        <if test="record.line != null">
            and line = #{record.line}
        </if>
        <if test="record.flag != null">
            and flag = #{record.flag}
        </if>
        <if test="orgId != null">
            and org_id = #{orgId}
        </if>
        order by plan_uuid ASC
        <if test="record.limitStart != null and record.limitStart>=0">
            limit #{record.limitStart} , #{record.limitEnd}
        </if>
    </select>


    <update id="updateDispatchPlanListByStatusSYNC" parameterType="map">
        update dispatch_plan
        set status_sync = #{status}
        where plan_uuid in
        <foreach item="item" index="index" collection="params" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        and org_id in
        <foreach item="item" index="index" collection="orgIds" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        and status_sync=1
    </update>

    <update id="updPlanByStatusSync">
        UPDATE dispatch_plan
        SET status_sync = #{statusSync}
        WHERE plan_uuid in
        <foreach item="item" index="index" collection="params" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        AND org_id = #{orgId}
    </update>
    <update id="rollbackAssistTasks">
        update dispatch_plan
        set status_plan = 0, seat_id = null
        where seat_id = #{seatId} and status_plan = 1 and org_id = #{orgId}
    </update>


    <select id="selectPlanGroupByUserIdLineRobot" resultType="com.guiji.dispatch.dao.entity.DispatchPlan">
        select
        user_id,robot
        from dispatch_plan where 1=1
        <if test="dis.callHour != null">
            and find_in_set(#{dis.callHour},call_hour)
        </if>
        <if test="dis.userId != null">
            and user_id = #{dis.userId}
        </if>
        <if test="dis.callData != null">
            and call_data = #{dis.callData}
        </if>
        <if test="dis.isDel != null">
            and is_del = #{dis.isDel}
        </if>
        <if test="dis.statusPlan != null">
            and status_plan = #{dis.statusPlan}
        </if>
        <if test="dis.statusSync != null">
            and status_sync = #{dis.statusSync}
        </if>
        <if test="dis.flag != null">
            and flag = #{dis.flag}
        </if>
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by user_id,robot
    </select>

    <select id="selectPlanGroupByUserId" resultType="com.guiji.dispatch.dao.entity.DispatchPlan">
        select
        user_id
        from dispatch_plan where 1=1
        <if test="dis.callHour != null">
            and find_in_set(#{dis.callHour},call_hour)
        </if>
        <if test="dis.userId != null">
            and user_id = #{dis.userId}
        </if>
        <if test="dis.callData != null">
            and call_data = #{dis.callData}
        </if>
        <if test="dis.isDel != null">
            and is_del = #{dis.isDel}
        </if>
        <if test="dis.statusPlan != null">
            and status_plan = #{dis.statusPlan}
        </if>
        <if test="dis.statusSync != null">
            and status_sync = #{dis.statusSync}
        </if>
        <if test="dis.flag != null">
            and flag = #{dis.flag}
        </if>
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by user_id
    </select>

    <select id="totalPlanCount" resultType="com.guiji.dispatch.vo.TotalPlanCountVo">
        SELECT
        COUNT(plan_uuid) AS totalCount,
        IFNULL(SUM(status_plan = 1),0) AS doingCount,
        IFNULL(SUM(status_plan = 2),0) AS finishCount,
        IFNULL(SUM(status_plan = 3),0) AS suspendCount,
        IFNULL(SUM(status_plan = 4),0) AS stopCount
        FROM dispatch_plan
        WHERE is_del = 0
        <if test="plan != null">
            <if test="plan.orgCode != null">
                AND (org_code = #{plan.orgCode} OR org_code LIKE CONCAT(#{plan.orgCode}, '%'))
            </if>
            <if test="plan.batchId != null">
                AND batch_id = #{plan.batchId}
            </if>
            <if test="plan.orgId != null">
                AND org_id = #{plan.orgId}
            </if>
        </if>
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="beginDate != null and endDate != null">
            AND gmt_create BETWEEN #{beginDate} AND #{endDate}
        </if>
    </select>


    <select id="queryDispatchPlanById" resultType="com.guiji.dispatch.dao.entity.DispatchPlan">
        SELECT
        <include refid="Base_Column_List"/>
        FROM dispatch_plan
        WHERE plan_uuid = #{planUuid} and org_id = #{orgId}
    </select>

    <select id="queryPlanRemarkById" resultType="java.lang.String">
    SELECT
      attach
    FROM dispatch_plan
    WHERE plan_uuid = #{planUuid} and org_id = #{orgId}
  </select>


    <select id="queryDownloadPlanList"
            resultType="com.guiji.dispatch.vo.DownLoadPlanVo"
            parameterType="com.guiji.dispatch.dao.entity.DispatchPlanExample">
        SELECT
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        plan_uuid ,
        user_id ,
        batch_id ,
        phone ,
        attach ,
        params ,
        status_plan ,
        status_sync ,
        recall ,
        recall_params ,
        robot ,
        line ,
        result ,
        call_agent ,
        clean ,
        call_data ,
        call_hour ,
        gmt_create ,
        gmt_modified ,
        is_tts ,
        replay_type ,
        is_del ,
        username ,
        line_name ,
        robot_name ,
        batch_name ,
        flag ,
        org_code ,
        org_id ,
        city_name ,
        city_code ,
        line_type ,
        seat_id ,
        DATE_FORMAT(gmt_create,'%Y-%m-%d %H:%i:%s') AS add_time
        FROM dispatch_plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>


    <select id="getPlanUuidList" resultType="com.guiji.dispatch.dao.entity.DispatchPlan"
            parameterType="com.guiji.dispatch.dao.entity.DispatchPlanExample">
        select
        plan_uuid,batch_id
        from dispatch_plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>


    <select id="totalNoNotifyPlanByOrg" resultType="com.guiji.dispatch.vo.TotalBatchPlanCountVo">
    SELECT
      p.batch_id,
      p.user_id,
      b.gmt_create AS add_batch_time,
      COUNT(p.plan_uuid) AS totalCount,
      IFNULL(SUM(p.status_plan = 1),0) AS doingCount,
      IFNULL(SUM(p.status_plan = 2),0) AS finishCount,
      IFNULL(SUM(p.status_plan = 3),0) AS suspendCount,
      IFNULL(SUM(p.status_plan = 4),0) AS stopCount
    FROM dispatch_plan p , dispatch_plan_batch b
    WHERE p.batch_id = b.id
      AND b.status_notify = ${@com.guiji.dispatch.enums.BatchNotifyStatusEnum@WAITING.getStatus()}
      AND p.org_id = #{orgId}
      AND p.call_data = #{callData}
      GROUP BY p.batch_id, p.user_id
  </select>
    <select id="assistGroupStat" resultType="com.guiji.dispatch.vo.AssistGroupVO">
        select call_agent agentGroupId, status_plan status, count(batch_id) number
        from dispatch_plan
        where status_plan in ('1', '2') and call_agent is not null and call_data = #{today}
        <if test="orgIds != null">
            and org_id in
            <foreach item="item" index="index" collection="orgIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by call_agent, status_plan;
    </select>

</mapper>