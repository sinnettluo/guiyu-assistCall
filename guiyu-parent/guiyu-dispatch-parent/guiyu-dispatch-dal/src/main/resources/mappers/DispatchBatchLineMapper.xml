<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guiji.dispatch.dao.DispatchBatchLineMapper">
  <resultMap id="BaseResultMap" type="com.guiji.dispatch.dao.entity.DispatchBatchLine">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_id" jdbcType="INTEGER" property="batchId" />
    <result column="line_id" jdbcType="INTEGER" property="lineId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="line_type" jdbcType="INTEGER" property="lineType" />
    <result column="line_name" jdbcType="VARCHAR" property="lineName" />
    <result column="line_amount" jdbcType="DECIMAL" property="lineAmount" />
    <result column="overtArea" jdbcType="VARCHAR" property="overtarea" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, batch_id, line_id, user_id, org_id, line_type, line_name, line_amount, overtArea
  </sql>
  <select id="selectByExample" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from dispatch_batch_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dispatch_batch_line
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dispatch_batch_line
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLineExample">
    delete from dispatch_batch_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLine" useGeneratedKeys="true" keyProperty="id">
    insert into dispatch_batch_line (id, batch_id, line_id, 
      user_id, org_id, line_type, 
      line_name, line_amount, overtArea
      )
    values (#{id,jdbcType=INTEGER}, #{batchId,jdbcType=INTEGER}, #{lineId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{lineType,jdbcType=INTEGER}, 
      #{lineName,jdbcType=VARCHAR}, #{lineAmount,jdbcType=DECIMAL}, #{overtarea,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLine" useGeneratedKeys="true" keyProperty="id">
    insert into dispatch_batch_line
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="lineId != null">
        line_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="lineType != null">
        line_type,
      </if>
      <if test="lineName != null">
        line_name,
      </if>
      <if test="lineAmount != null">
        line_amount,
      </if>
      <if test="overtarea != null">
        overtArea,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="lineId != null">
        #{lineId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="lineType != null">
        #{lineType,jdbcType=INTEGER},
      </if>
      <if test="lineName != null">
        #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="lineAmount != null">
        #{lineAmount,jdbcType=DECIMAL},
      </if>
      <if test="overtarea != null">
        #{overtarea,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLineExample" resultType="java.lang.Long">
    select count(*) from dispatch_batch_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dispatch_batch_line
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.batchId != null">
        batch_id = #{record.batchId,jdbcType=INTEGER},
      </if>
      <if test="record.lineId != null">
        line_id = #{record.lineId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.lineType != null">
        line_type = #{record.lineType,jdbcType=INTEGER},
      </if>
      <if test="record.lineName != null">
        line_name = #{record.lineName,jdbcType=VARCHAR},
      </if>
      <if test="record.lineAmount != null">
        line_amount = #{record.lineAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overtarea != null">
        overtArea = #{record.overtarea,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dispatch_batch_line
    set id = #{record.id,jdbcType=INTEGER},
      batch_id = #{record.batchId,jdbcType=INTEGER},
      line_id = #{record.lineId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=INTEGER},
      line_type = #{record.lineType,jdbcType=INTEGER},
      line_name = #{record.lineName,jdbcType=VARCHAR},
      line_amount = #{record.lineAmount,jdbcType=DECIMAL},
      overtArea = #{record.overtarea,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLine">
    update dispatch_batch_line
    <set>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=INTEGER},
      </if>
      <if test="lineId != null">
        line_id = #{lineId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="lineType != null">
        line_type = #{lineType,jdbcType=INTEGER},
      </if>
      <if test="lineName != null">
        line_name = #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="lineAmount != null">
        line_amount = #{lineAmount,jdbcType=DECIMAL},
      </if>
      <if test="overtarea != null">
        overtArea = #{overtarea,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guiji.dispatch.dao.entity.DispatchBatchLine">
    update dispatch_batch_line
    set batch_id = #{batchId,jdbcType=INTEGER},
      line_id = #{lineId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=INTEGER},
      line_type = #{lineType,jdbcType=INTEGER},
      line_name = #{lineName,jdbcType=VARCHAR},
      line_amount = #{lineAmount,jdbcType=DECIMAL},
      overtArea = #{overtarea,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>