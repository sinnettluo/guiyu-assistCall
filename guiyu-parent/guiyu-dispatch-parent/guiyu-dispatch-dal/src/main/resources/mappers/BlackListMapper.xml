<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.dispatch.dao.BlackListMapper">
	<resultMap id="BaseResultMap" type="com.guiji.dispatch.dao.entity.BlackList">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="update_user_id" property="updateUserId"
			jdbcType="INTEGER" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="create_user_name" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="update_user_name" property="updateUserName"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, phone, remark, gmt_create, gmt_modified, `type`, user_id,
		update_user_id, org_code,
		create_user_name, update_user_name, `status`
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.guiji.dispatch.dao.entity.BlackListExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from black_list
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart != null and limitStart>=0">
			limit #{limitStart} , #{limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from black_list
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from black_list
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.guiji.dispatch.dao.entity.BlackListExample">
		delete from black_list
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.guiji.dispatch.dao.entity.BlackList">
		insert into black_list (id, phone, remark,
		gmt_create, gmt_modified, `type`,
		user_id, update_user_id, org_code,
		create_user_name, update_user_name, `status`
		)
		values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER},
		#{orgCode,jdbcType=VARCHAR},
		#{createUserName,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.guiji.dispatch.dao.entity.BlackList">
		insert into black_list
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtModified != null">
				gmt_modified,
			</if>
			<if test="type != null">
				`type`,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="orgCode != null">
				org_code,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="status != null">
				`status`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				#{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="orgCode != null">
				#{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="createUserName != null">
				#{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="updateUserName != null">
				#{updateUserName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.guiji.dispatch.dao.entity.BlackListExample"
		resultType="java.lang.Integer">
		select count(*) from black_list
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update black_list
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.gmtCreate != null">
				gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.gmtModified != null">
				gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="record.type != null">
				`type` = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.updateUserId != null">
				update_user_id = #{record.updateUserId,jdbcType=INTEGER},
			</if>
			<if test="record.orgCode != null">
				org_code = #{record.orgCode,jdbcType=VARCHAR},
			</if>
			<if test="record.createUserName != null">
				create_user_name = #{record.createUserName,jdbcType=VARCHAR},
			</if>
			<if test="record.updateUserName != null">
				update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				`status` = #{record.status,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update black_list
		set id = #{record.id,jdbcType=INTEGER},
		phone = #{record.phone,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
		gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
		`type` = #{record.type,jdbcType=VARCHAR},
		user_id = #{record.userId,jdbcType=INTEGER},
		update_user_id = #{record.updateUserId,jdbcType=INTEGER},
		org_code = #{record.orgCode,jdbcType=VARCHAR},
		create_user_name = #{record.createUserName,jdbcType=VARCHAR},
		update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
		`status` = #{record.status,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.guiji.dispatch.dao.entity.BlackList">
		update black_list
		<set>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				`type` = #{type,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="orgCode != null">
				org_code = #{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="createUserName != null">
				create_user_name = #{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="updateUserName != null">
				update_user_name = #{updateUserName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.guiji.dispatch.dao.entity.BlackList">
		update black_list
		set phone = #{phone,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
		`type` = #{type,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		update_user_id = #{updateUserId,jdbcType=INTEGER},
		org_code = #{orgCode,jdbcType=VARCHAR},
		create_user_name = #{createUserName,jdbcType=VARCHAR},
		update_user_name = #{updateUserName,jdbcType=VARCHAR},
		`status` = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="BatchinsertBlackList" parameterType="java.util.List">
		insert into  black_list (id, phone, remark,
		gmt_create, gmt_modified, `type`,
		user_id, update_user_id, org_code,
		create_user_name, update_user_name, `status`
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id,jdbcType=INTEGER}, #{item.phone,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR},
			#{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP},
			#{item.type,jdbcType=VARCHAR},
			#{item.userId,jdbcType=INTEGER}, #{item.updateUserId,jdbcType=INTEGER}, #{item.orgCode,jdbcType=VARCHAR},
			#{item.createUserName,jdbcType=VARCHAR},
			#{item.updateUserName,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}
			)
		</foreach>
	</insert>


	<select id="queryBlackList" resultType="com.guiji.dispatch.dao.entity.BlackList">
		SELECT
			id, phone, remark, gmt_create, gmt_modified, type, user_id,
			update_user_id, org_code,
			create_user_name, update_user_name, status
		FROM black_list
		WHERE 1 = 1
		<if test="black != null">
			<if test="black.authLevel == 1 and black.userId != null">
				AND user_id = #{black.userId}
			</if>
			<if test="black.phone != null and black.phone != ''">
				AND phone = #{black.phone}
			</if>
			<if test="black.authLevel == 2 and black.orgCode != null and black.orgCode != ''" >
				AND org_code = #{black.orgCode}
			</if>
			<if test="black.authLevel == 3 and black.orgCode != null and black.orgCode != ''" >
				AND (org_code = #{black.orgCode} OR org_code LIKE CONCAT(#{black.orgCode}, '%'))
			</if>
			<if test="black.status != null">
				AND status = #{black.status}
			</if>
		</if>
		<if test="page != null and page.isPage ">
			<if test="page.orderBy != null " >
				order by ${page.orderBy}	${page.sort}
			</if>
			<if test="page.indexStart != null " >
				limit #{page.indexStart,jdbcType=BIGINT}, #{page.pageSize,jdbcType=INTEGER}
			</if>
		</if>
	</select>

	<select id="queryBlackCount" resultType="java.lang.Integer">
		SELECT
			COUNT(id)
		FROM black_list
		WHERE 1 = 1
		<if test="black != null">
			<if test="black.authLevel == 1 and black.userId != null">
				AND user_id = #{black.userId}
			</if>
			<if test="black.phone != null and black.phone != ''">
				AND phone = #{black.phone}
			</if>
			<if test="black.authLevel == 2 and black.orgCode != null and black.orgCode != ''" >
				AND org_code = #{black.orgCode}
			</if>
			<if test="black.authLevel == 3 and black.orgCode != null and black.orgCode != ''" >
				AND (org_code = #{black.orgCode} OR org_code LIKE CONCAT(#{black.orgCode}, '%'))
			</if>
			<if test="black.status != null">
				AND status = #{black.status}
			</if>
		</if>

	</select>
</mapper>