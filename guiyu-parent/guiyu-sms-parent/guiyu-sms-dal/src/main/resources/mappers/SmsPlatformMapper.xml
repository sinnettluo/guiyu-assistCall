<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guiji.sms.dao.SmsPlatformMapper">
  <resultMap id="BaseResultMap" type="com.guiji.sms.dao.entity.SmsPlatform">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform_name" jdbcType="VARCHAR" property="platformName" />
    <result column="platform_params" jdbcType="VARCHAR" property="platformParams" />
    <result column="identification" jdbcType="VARCHAR" property="identification" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform_name, platform_params, identification, content_type, org_code, create_id, 
    create_name, create_time
  </sql>
  <select id="selectByExample" parameterType="com.guiji.sms.dao.entity.SmsPlatformExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sms_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sms_platform
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sms_platform
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guiji.sms.dao.entity.SmsPlatformExample">
    delete from sms_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guiji.sms.dao.entity.SmsPlatform" useGeneratedKeys="true" keyProperty="id">
    insert into sms_platform (id, platform_name, platform_params, 
      identification, content_type, org_code, 
      create_id, create_name, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{platformName,jdbcType=VARCHAR}, #{platformParams,jdbcType=VARCHAR}, 
      #{identification,jdbcType=VARCHAR}, #{contentType,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR}, 
      #{createId,jdbcType=INTEGER}, #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guiji.sms.dao.entity.SmsPlatform" useGeneratedKeys="true" keyProperty="id">
    insert into sms_platform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platformName != null">
        platform_name,
      </if>
      <if test="platformParams != null">
        platform_params,
      </if>
      <if test="identification != null">
        identification,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="platformName != null">
        #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformParams != null">
        #{platformParams,jdbcType=VARCHAR},
      </if>
      <if test="identification != null">
        #{identification,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guiji.sms.dao.entity.SmsPlatformExample" resultType="java.lang.Long">
    select count(*) from sms_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sms_platform
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformName != null">
        platform_name = #{record.platformName,jdbcType=VARCHAR},
      </if>
      <if test="record.platformParams != null">
        platform_params = #{record.platformParams,jdbcType=VARCHAR},
      </if>
      <if test="record.identification != null">
        identification = #{record.identification,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sms_platform
    set id = #{record.id,jdbcType=INTEGER},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      platform_params = #{record.platformParams,jdbcType=VARCHAR},
      identification = #{record.identification,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guiji.sms.dao.entity.SmsPlatform">
    update sms_platform
    <set>
      <if test="platformName != null">
        platform_name = #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformParams != null">
        platform_params = #{platformParams,jdbcType=VARCHAR},
      </if>
      <if test="identification != null">
        identification = #{identification,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guiji.sms.dao.entity.SmsPlatform">
    update sms_platform
    set platform_name = #{platformName,jdbcType=VARCHAR},
      platform_params = #{platformParams,jdbcType=VARCHAR},
      identification = #{identification,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>