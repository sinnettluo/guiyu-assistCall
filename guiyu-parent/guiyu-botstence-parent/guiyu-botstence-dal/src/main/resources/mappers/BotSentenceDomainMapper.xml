<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.botsentence.dao.BotSentenceDomainMapper" >
  <resultMap id="BaseResultMap" type="com.guiji.botsentence.dao.entity.BotSentenceDomain" >
    <id column="domain_id" property="domainId" jdbcType="VARCHAR" />
    <result column="domain_name" property="domainName" jdbcType="VARCHAR" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="process_id" property="processId" jdbcType="VARCHAR" />
    <result column="com_domain" property="comDomain" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="ignore_but_domains" property="ignoreButDomains" jdbcType="VARCHAR" />
    <result column="is_interrupt" property="isInterrupt" jdbcType="VARCHAR" />
    <result column="is_main_flow" property="isMainFlow" jdbcType="VARCHAR" />
    <result column="crt_time" property="crtTime" jdbcType="TIMESTAMP" />
    <result column="crt_user" property="crtUser" jdbcType="VARCHAR" />
    <result column="lst_update_time" property="lstUpdateTime" jdbcType="TIMESTAMP" />
    <result column="lst_update_user" property="lstUpdateUser" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="parent" property="parent" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="position_x" property="positionX" jdbcType="INTEGER" />
    <result column="position_y" property="positionY" jdbcType="INTEGER" />
    <result column="ignore_user_sentence" property="ignoreUserSentence" jdbcType="BIT" />
    <result column="ignore_but_negative" property="ignoreButNegative" jdbcType="BIT" />
    <result column="match_order" property="matchOrder" jdbcType="VARCHAR" />
    <result column="not_match_less4_to" property="notMatchLess4To" jdbcType="VARCHAR" />
    <result column="not_match_to" property="notMatchTo" jdbcType="VARCHAR" />
    <result column="no_words_to" property="noWordsTo" jdbcType="VARCHAR" />
    <result column="is_special_limit_free" property="isSpecialLimitFree" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    domain_id, domain_name, template_id, process_id, com_domain, category, ignore_but_domains, 
    is_interrupt, is_main_flow, crt_time, crt_user, lst_update_time, lst_update_user, 
    `type`, parent, parent_id, position_x, position_y, ignore_user_sentence, ignore_but_negative, 
    match_order, not_match_less4_to, not_match_to, no_words_to, is_special_limit_free
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bot_sentence_domain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bot_sentence_domain
    where domain_id = #{domainId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bot_sentence_domain
    where domain_id = #{domainId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomainExample" >
    delete from bot_sentence_domain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomain" >
    <selectKey resultType="java.lang.String" keyProperty="domainId" order="BEFORE" >
      SELECT genTabId('bot_sentence_domain')
    </selectKey>
    insert into bot_sentence_domain (domain_id, domain_name, template_id, 
      process_id, com_domain, category, 
      ignore_but_domains, is_interrupt, is_main_flow, 
      crt_time, crt_user, lst_update_time, 
      lst_update_user, `type`, parent, 
      parent_id, position_x, position_y, 
      ignore_user_sentence, ignore_but_negative, match_order, 
      not_match_less4_to, not_match_to, no_words_to, 
      is_special_limit_free)
    values (#{domainId,jdbcType=VARCHAR}, #{domainName,jdbcType=VARCHAR}, #{templateId,jdbcType=VARCHAR}, 
      #{processId,jdbcType=VARCHAR}, #{comDomain,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{ignoreButDomains,jdbcType=VARCHAR}, #{isInterrupt,jdbcType=VARCHAR}, #{isMainFlow,jdbcType=VARCHAR}, 
      #{crtTime,jdbcType=TIMESTAMP}, #{crtUser,jdbcType=VARCHAR}, #{lstUpdateTime,jdbcType=TIMESTAMP}, 
      #{lstUpdateUser,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{parent,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{positionX,jdbcType=INTEGER}, #{positionY,jdbcType=INTEGER}, 
      #{ignoreUserSentence,jdbcType=BIT}, #{ignoreButNegative,jdbcType=BIT}, #{matchOrder,jdbcType=VARCHAR}, 
      #{notMatchLess4To,jdbcType=VARCHAR}, #{notMatchTo,jdbcType=VARCHAR}, #{noWordsTo,jdbcType=VARCHAR}, 
      #{isSpecialLimitFree,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomain" >
    <selectKey resultType="java.lang.String" keyProperty="domainId" order="BEFORE" >
      SELECT genTabId('bot_sentence_domain')
    </selectKey>
    insert into bot_sentence_domain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      domain_id,
      <if test="domainName != null" >
        domain_name,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="comDomain != null" >
        com_domain,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="ignoreButDomains != null" >
        ignore_but_domains,
      </if>
      <if test="isInterrupt != null" >
        is_interrupt,
      </if>
      <if test="isMainFlow != null" >
        is_main_flow,
      </if>
      <if test="crtTime != null" >
        crt_time,
      </if>
      <if test="crtUser != null" >
        crt_user,
      </if>
      <if test="lstUpdateTime != null" >
        lst_update_time,
      </if>
      <if test="lstUpdateUser != null" >
        lst_update_user,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="parent != null" >
        parent,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="positionX != null" >
        position_x,
      </if>
      <if test="positionY != null" >
        position_y,
      </if>
      <if test="ignoreUserSentence != null" >
        ignore_user_sentence,
      </if>
      <if test="ignoreButNegative != null" >
        ignore_but_negative,
      </if>
      <if test="matchOrder != null" >
        match_order,
      </if>
      <if test="notMatchLess4To != null" >
        not_match_less4_to,
      </if>
      <if test="notMatchTo != null" >
        not_match_to,
      </if>
      <if test="noWordsTo != null" >
        no_words_to,
      </if>
      <if test="isSpecialLimitFree != null" >
        is_special_limit_free,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{domainId,jdbcType=VARCHAR},
      <if test="domainName != null" >
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="comDomain != null" >
        #{comDomain,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="ignoreButDomains != null" >
        #{ignoreButDomains,jdbcType=VARCHAR},
      </if>
      <if test="isInterrupt != null" >
        #{isInterrupt,jdbcType=VARCHAR},
      </if>
      <if test="isMainFlow != null" >
        #{isMainFlow,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null" >
        #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crtUser != null" >
        #{crtUser,jdbcType=VARCHAR},
      </if>
      <if test="lstUpdateTime != null" >
        #{lstUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lstUpdateUser != null" >
        #{lstUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="parent != null" >
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="positionX != null" >
        #{positionX,jdbcType=INTEGER},
      </if>
      <if test="positionY != null" >
        #{positionY,jdbcType=INTEGER},
      </if>
      <if test="ignoreUserSentence != null" >
        #{ignoreUserSentence,jdbcType=BIT},
      </if>
      <if test="ignoreButNegative != null" >
        #{ignoreButNegative,jdbcType=BIT},
      </if>
      <if test="matchOrder != null" >
        #{matchOrder,jdbcType=VARCHAR},
      </if>
      <if test="notMatchLess4To != null" >
        #{notMatchLess4To,jdbcType=VARCHAR},
      </if>
      <if test="notMatchTo != null" >
        #{notMatchTo,jdbcType=VARCHAR},
      </if>
      <if test="noWordsTo != null" >
        #{noWordsTo,jdbcType=VARCHAR},
      </if>
      <if test="isSpecialLimitFree != null" >
        #{isSpecialLimitFree,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomainExample" resultType="java.lang.Integer" >
    select count(*) from bot_sentence_domain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bot_sentence_domain
    <set >
      <if test="record.domainId != null" >
        domain_id = #{record.domainId,jdbcType=VARCHAR},
      </if>
      <if test="record.domainName != null" >
        domain_name = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.templateId != null" >
        template_id = #{record.templateId,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null" >
        process_id = #{record.processId,jdbcType=VARCHAR},
      </if>
      <if test="record.comDomain != null" >
        com_domain = #{record.comDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.ignoreButDomains != null" >
        ignore_but_domains = #{record.ignoreButDomains,jdbcType=VARCHAR},
      </if>
      <if test="record.isInterrupt != null" >
        is_interrupt = #{record.isInterrupt,jdbcType=VARCHAR},
      </if>
      <if test="record.isMainFlow != null" >
        is_main_flow = #{record.isMainFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.crtTime != null" >
        crt_time = #{record.crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crtUser != null" >
        crt_user = #{record.crtUser,jdbcType=VARCHAR},
      </if>
      <if test="record.lstUpdateTime != null" >
        lst_update_time = #{record.lstUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lstUpdateUser != null" >
        lst_update_user = #{record.lstUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null" >
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionX != null" >
        position_x = #{record.positionX,jdbcType=INTEGER},
      </if>
      <if test="record.positionY != null" >
        position_y = #{record.positionY,jdbcType=INTEGER},
      </if>
      <if test="record.ignoreUserSentence != null" >
        ignore_user_sentence = #{record.ignoreUserSentence,jdbcType=BIT},
      </if>
      <if test="record.ignoreButNegative != null" >
        ignore_but_negative = #{record.ignoreButNegative,jdbcType=BIT},
      </if>
      <if test="record.matchOrder != null" >
        match_order = #{record.matchOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.notMatchLess4To != null" >
        not_match_less4_to = #{record.notMatchLess4To,jdbcType=VARCHAR},
      </if>
      <if test="record.notMatchTo != null" >
        not_match_to = #{record.notMatchTo,jdbcType=VARCHAR},
      </if>
      <if test="record.noWordsTo != null" >
        no_words_to = #{record.noWordsTo,jdbcType=VARCHAR},
      </if>
      <if test="record.isSpecialLimitFree != null" >
        is_special_limit_free = #{record.isSpecialLimitFree,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bot_sentence_domain
    set domain_id = #{record.domainId,jdbcType=VARCHAR},
      domain_name = #{record.domainName,jdbcType=VARCHAR},
      template_id = #{record.templateId,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=VARCHAR},
      com_domain = #{record.comDomain,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      ignore_but_domains = #{record.ignoreButDomains,jdbcType=VARCHAR},
      is_interrupt = #{record.isInterrupt,jdbcType=VARCHAR},
      is_main_flow = #{record.isMainFlow,jdbcType=VARCHAR},
      crt_time = #{record.crtTime,jdbcType=TIMESTAMP},
      crt_user = #{record.crtUser,jdbcType=VARCHAR},
      lst_update_time = #{record.lstUpdateTime,jdbcType=TIMESTAMP},
      lst_update_user = #{record.lstUpdateUser,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      position_x = #{record.positionX,jdbcType=INTEGER},
      position_y = #{record.positionY,jdbcType=INTEGER},
      ignore_user_sentence = #{record.ignoreUserSentence,jdbcType=BIT},
      ignore_but_negative = #{record.ignoreButNegative,jdbcType=BIT},
      match_order = #{record.matchOrder,jdbcType=VARCHAR},
      not_match_less4_to = #{record.notMatchLess4To,jdbcType=VARCHAR},
      not_match_to = #{record.notMatchTo,jdbcType=VARCHAR},
      no_words_to = #{record.noWordsTo,jdbcType=VARCHAR},
      is_special_limit_free = #{record.isSpecialLimitFree,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomain" >
    update bot_sentence_domain
    <set >
      <if test="domainName != null" >
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null" >
        process_id = #{processId,jdbcType=VARCHAR},
      </if>
      <if test="comDomain != null" >
        com_domain = #{comDomain,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="ignoreButDomains != null" >
        ignore_but_domains = #{ignoreButDomains,jdbcType=VARCHAR},
      </if>
      <if test="isInterrupt != null" >
        is_interrupt = #{isInterrupt,jdbcType=VARCHAR},
      </if>
      <if test="isMainFlow != null" >
        is_main_flow = #{isMainFlow,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null" >
        crt_time = #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crtUser != null" >
        crt_user = #{crtUser,jdbcType=VARCHAR},
      </if>
      <if test="lstUpdateTime != null" >
        lst_update_time = #{lstUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lstUpdateUser != null" >
        lst_update_user = #{lstUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="parent != null" >
        parent = #{parent,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="positionX != null" >
        position_x = #{positionX,jdbcType=INTEGER},
      </if>
      <if test="positionY != null" >
        position_y = #{positionY,jdbcType=INTEGER},
      </if>
      <if test="ignoreUserSentence != null" >
        ignore_user_sentence = #{ignoreUserSentence,jdbcType=BIT},
      </if>
      <if test="ignoreButNegative != null" >
        ignore_but_negative = #{ignoreButNegative,jdbcType=BIT},
      </if>
      <if test="matchOrder != null" >
        match_order = #{matchOrder,jdbcType=VARCHAR},
      </if>
      <if test="notMatchLess4To != null" >
        not_match_less4_to = #{notMatchLess4To,jdbcType=VARCHAR},
      </if>
      <if test="notMatchTo != null" >
        not_match_to = #{notMatchTo,jdbcType=VARCHAR},
      </if>
      <if test="noWordsTo != null" >
        no_words_to = #{noWordsTo,jdbcType=VARCHAR},
      </if>
      <if test="isSpecialLimitFree != null" >
        is_special_limit_free = #{isSpecialLimitFree,jdbcType=BIT},
      </if>
    </set>
    where domain_id = #{domainId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guiji.botsentence.dao.entity.BotSentenceDomain" >
    update bot_sentence_domain
    set domain_name = #{domainName,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=VARCHAR},
      com_domain = #{comDomain,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      ignore_but_domains = #{ignoreButDomains,jdbcType=VARCHAR},
      is_interrupt = #{isInterrupt,jdbcType=VARCHAR},
      is_main_flow = #{isMainFlow,jdbcType=VARCHAR},
      crt_time = #{crtTime,jdbcType=TIMESTAMP},
      crt_user = #{crtUser,jdbcType=VARCHAR},
      lst_update_time = #{lstUpdateTime,jdbcType=TIMESTAMP},
      lst_update_user = #{lstUpdateUser,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      position_x = #{positionX,jdbcType=INTEGER},
      position_y = #{positionY,jdbcType=INTEGER},
      ignore_user_sentence = #{ignoreUserSentence,jdbcType=BIT},
      ignore_but_negative = #{ignoreButNegative,jdbcType=BIT},
      match_order = #{matchOrder,jdbcType=VARCHAR},
      not_match_less4_to = #{notMatchLess4To,jdbcType=VARCHAR},
      not_match_to = #{notMatchTo,jdbcType=VARCHAR},
      no_words_to = #{noWordsTo,jdbcType=VARCHAR},
      is_special_limit_free = #{isSpecialLimitFree,jdbcType=BIT}
    where domain_id = #{domainId,jdbcType=VARCHAR}
  </update>
</mapper>