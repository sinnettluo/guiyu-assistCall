<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.botsentence.dao.ext.BotSentenceProcessExtMapper" >
  
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into bot_sentence_process (process_id, template_id, template_name, 
      template_type, version, industry, 
      account_no, old_process_id, crt_time, 
      crt_user, lst_update_time, lst_update_user, 
      `state`, approve_time, approve_user, 
      approve_notes)
    VALUES
    <foreach collection="list" item="item" index="index" separator="," >
        (
        (SELECT genTabId('bot_sentence_process') AS processId),
        #{item.templateId},
        #{item.templateName},
        #{item.templateType},
        #{item.version},
        #{item.industry},
        #{item.accountNo},
        #{item.oldProcessId},
        #{item.crtTime},
        #{item.crtUser},
        #{item.lstUpdateTime},
        #{item.lstUpdateUser},
        #{item.state},
        #{item.approveTime},
        #{item.approveUser},
        #{item.approveNotes}
        )
    </foreach>
</insert>




<insert id="insert" parameterType="com.guiji.botsentence.dao.entity.BotSentenceProcess" >
    <selectKey resultType="java.lang.String" keyProperty="processId" order="BEFORE" >
      SELECT genTabId('bot_sentence_process')
    </selectKey>
    insert into bot_sentence_process (process_id, template_id, template_name, 
      template_type, version, industry, 
      account_no, old_process_id, crt_time, 
      crt_user, lst_update_time, lst_update_user, 
      `state`, approve_time, approve_user, 
      approve_notes)
    values (#{processId,jdbcType=VARCHAR}, #{templateId,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{templateType,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR}, 
      #{accountNo,jdbcType=VARCHAR}, #{oldProcessId,jdbcType=VARCHAR}, #{crtTime,jdbcType=TIMESTAMP}, 
      #{crtUser,jdbcType=VARCHAR}, #{lstUpdateTime,jdbcType=TIMESTAMP}, #{lstUpdateUser,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{approveTime,jdbcType=TIMESTAMP}, #{approveUser,jdbcType=VARCHAR}, 
      #{approveNotes,jdbcType=VARCHAR})
  </insert>

  <select id="getTemplateBySelf" resultType="com.guiji.botsentence.dao.entity.BotSentenceProcess">
  	select a.process_id as processId,a.template_id as templateId,a.template_name as templateName,a.template_type as templateType,
	a.version,a.industry,a.account_no as accountNo,a.old_process_id as oldProcessId,a.crt_time as crtTime,a.crt_user as crtUser,
	a.lst_update_time as lstUpdateTime,a.lst_update_user as lstUpdateUser,a.state,a.approve_time as approveTime,
	a.approve_user as approveUser,a.approve_notes as approveNotes,a.sound_type as soundType,IFNULL(b.needTTs,0) as needTTs
	from bot_sentence_process a
	LEFT JOIN (select process_id,count(need_tts)>0 as needTTs from volice_info where need_tts=1 GROUP BY process_id) b on b.process_id=a.process_id
  	where a.account_no=#{accountNo}
  </select>
  
  <select id="getTemplateById" resultType="com.guiji.botsentence.dao.entity.BotSentenceProcess">
  	select a.process_id as processId,a.template_id as templateId,a.template_name as templateName,a.template_type as templateType,
	a.version,a.industry,a.account_no as accountNo,a.old_process_id as oldProcessId,a.crt_time as crtTime,a.crt_user as crtUser,
	a.lst_update_time as lstUpdateTime,a.lst_update_user as lstUpdateUser,a.state,a.approve_time as approveTime,
	a.approve_user as approveUser,a.approve_notes as approveNotes,a.sound_type as soundType,IFNULL(b.needTTs,0) as needTTs
	from bot_sentence_process a
	LEFT JOIN (select process_id,count(need_tts)>0 as needTTs from volice_info where need_tts=1 GROUP BY process_id) b on b.process_id=a.process_id
  	where a.template_id=#{templateId}
  </select>
  
  
  <select id="getAvailableTemplateBySelf" resultType="map">
  	select a.template_id as templateId,a.template_name as templateName,IFNULL(b.needTTs,0) as needTTs
	from bot_available_template a
	LEFT JOIN (select template_id,count(need_tts)>0 as needTTs from volice_info where need_tts=1 GROUP BY template_id) b on b.template_id=a.template_id
  	where a.user_id=#{accountNo}
  </select>
  
</mapper>